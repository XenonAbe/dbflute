#set ($myClassName = "${myNestSelectSetupperClassName}")

using System;
using ${glPackageCQ};

namespace ${glPackageNss} {

    public class ${myClassName} {

        // ===============================================================================
        //                                                                       Attribute
        //                                                                       =========
        protected ${myConditionQueryClassName} _query;

        // ===============================================================================
        //                                                                     Constructor
        //                                                                     ===========
        public ${myClassName}(${myConditionQueryClassName} query) {
            _query = query;
        }

        // ===============================================================================
        //                                                                    Setup Select
        //                                                                    ============
#foreach ($foreignKeys in $table.foreignKeys)
#set ($tmpPropertyNameInitCap = "${foreignKeys.foreignPropertyNameInitCap}")
        protected bool _isSelect${tmpPropertyNameInitCap};
        public bool IsSelect${tmpPropertyNameInitCap} { get { return _isSelect${tmpPropertyNameInitCap}; } }
        public void With${tmpPropertyNameInitCap}() {
            AssertConditionQuery(); _query.Query${tmpPropertyNameInitCap}(); _isSelect${tmpPropertyNameInitCap} = true;
        }

#end
#foreach ($referer in $table.refererList)
#if (${referer.isOneToOne()})
#set ($tmpPropertyNameInitCap = "${referer.ReffererPropertyNameInitCapAsOne}")
        protected bool _isSelect${tmpPropertyNameInitCap};
        public bool IsSelect${tmpPropertyNameInitCap} { get { return _isSelect${tmpPropertyNameInitCap}; } }
        public void With${tmpPropertyNameInitCap}() {
            AssertConditionQuery(); _query.Query${tmpPropertyNameInitCap}(); _isSelect${tmpPropertyNameInitCap} = true;
        }

#end
#end
        // ===============================================================================
        //                                                                          Helper
        //                                                                          ======
        protected void AssertConditionQuery() {
            if (!this.HasConditionQuery) { String msg = "The query should not be null."; throw new SystemException(msg); }
        }

        // ===============================================================================
        //                                                                        Accessor
        //                                                                        ========
        public bool HasConditionQuery {
            get { return _query != null; }
        }
    }
}
