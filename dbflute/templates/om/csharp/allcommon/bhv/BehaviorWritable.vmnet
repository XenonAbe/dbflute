
using System;
using System.Collections;

using ${glPackageBaseCommon};

namespace ${glPackageBaseCommonBhv} {

    /**
     * The interface of behavior-writable.
     * 
     * @author ${database.ClassAuthor}
     */
    public interface ${glBehaviorWritableInterfaceName} : ${glBehaviorReadableInterfaceName} {

        /**
         * Get dao-writable.
         * 
         * @return Dao-writable. (NotNull)
         */
        ${glDaoWritableInterfaceName} GetDaoWritable();

        /**
         * Create entity. (Call-Method)
         * 
         * @param entity Entity that the type is entity-interface. (NotNull)
         * @return Inserted count.
         */
        int CallCreate(${glEntityInterfaceName} entity);

        /**
         * Modify entity. (Call-Method)
         * 
         * @param entity Entity that the type is entity-interface. (NotNull)
         * @return Updated count.
         */
        int CallModify(${glEntityInterfaceName} entity);

        /**
         * Remove entity. (Call-Method)
         * 
         * @param entity Entity that the type is entity-interface. (NotNull)
         * @return Deleted count.
         */
        int CallRemove(${glEntityInterfaceName} entity);

        // =====================================================================================
        //                                                                   Basic Entity Update
        //                                                                   ===================
        #region Basic Entity Update
        /// <summary>
        /// Create.
        /// </summary>
        /// <param name="entity"> Entity. (NotNull)</param>
        void Create(${glPackageBaseCommon}.${glEntityInterfaceName} entity);

        /// <summary>
        /// Modify.
        /// </summary>
        /// <param name="entity"> Entity. (NotNull)</param>
        void Modify(${glPackageBaseCommon}.${glEntityInterfaceName} entity);

        /**
        /// Modify after select.
         * 
         * @param entity Entity.
         * @return Updated count.
         * @exception ${glPackageBaseCommonException}.${glRecordHasAlreadyBeenDeletedException}
         */
        void ModifyAfterSelect(${glPackageBaseCommon}.${glEntityInterfaceName} entity);

        /// <summary>
        /// Create or modify after select.
        /// </summary>
        /// <param name="entity">Entity. This must contain primary-key value at least. (NotNull)</param>
        /// <exception cref="${glPackageBaseCommonException}.${glRecordHasAlreadyBeenDeletedException}"></exception>
        void CreateOrModifyAfterSelect(${glPackageBaseCommon}.${glEntityInterfaceName} entity);

        /// <summary>
        /// Remove.
        /// </summary>
        /// <param name="entity"> Entity. (NotNull)</param>
        void Remove(${glPackageBaseCommon}.${glEntityInterfaceName} entity);
        #endregion
    }
}
