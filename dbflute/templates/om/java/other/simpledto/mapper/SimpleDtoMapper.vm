${database.allClassCopyright}package ${myEntityDtoMapperPackageName};
#set ($myClassName = "${myEntityDtoMapperClassName}")

import ${glPackageExtendedEntity}.${table.extendedEntityClassName};
import ${myExtendedEntityPackageName}.${myExtendedObjectClassName};

/**
 * The data transfer object of ${table.basicInfoDispString}.
 * <pre>
 * [primary-key]
 *     ${table.primaryKeyNameCommaString}
 * 
 * [column-property]
 *     ${table.columnNameCommaString}
 * 
 * [foreign-property]
 *     ${table.foreignPropertyNameCommaString}
 * 
 * [referrer-property]
 *     ${table.referrerPropertyNameCommaString}
 * 
 * [sequence]
 *     ${table.definedSequenceName}
 * 
 * [identity]
 *     ${table.identityColumnName}
 * 
 * [update-date]
 *     ${table.updateDateColumnName}
 * 
 * [version-no]
 *     ${table.versionNoColumnName}
 * </pre>
 * @author ${database.ClassAuthor}
 */${database.outputSuppressWarningsAfterLineSeparator()}
public class ${myClassName} {

    // ===================================================================================
    //                                                                          Definition
    //                                                                          ==========
    /** Serial version UID. (Default) */
    private static final long serialVersionUID = 1L;

    // ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
	public ${myExtendedObjectClassName} map(${table.extendedEntityClassName} entity) {
	    final ${myExtendedObjectClassName} dto = new ${myExtendedObjectClassName}();
#foreach ($col in $table.columns)
	    dto.set${col.javaName}(entity.get${col.javaName}());
#end
#foreach ($foreignKeys in $table.foreignKeys)
#set ($foreignVariableName = "${glParentVariablePrefix}${foreignKeys.foreignPropertyNameInitCap}")
#set ($foreignEntityClassName = "${database.dtoExtendedDtoPrefix}${foreignKeys.foreignTable.javaName}${database.dtoExtendedDtoSuffix}")
        if (entity.hasForeignInstance${foreignKeys.foreignJavaBeansRulePropertyNameInitCap}()) {
		    final ${foreignEntityClassName}Mapper mapper = new ${foreignEntityClassName}Mapper();
			dto.set${foreignKeys.foreignJavaBeansRulePropertyNameInitCap}(mapper.map(entity.get${foreignKeys.foreignJavaBeansRulePropertyNameInitCap}()));
		};
#end
#foreach ($referrer in $table.referrers)
#set ($referrerTable = $referrer.table)
#set ($referrerEntityClassName = "${database.dtoExtendedDtoPrefix}${referrer.table.javaName}${database.dtoExtendedDtoSuffix}")
#set ($referrerVariableName = "${glChildrenVariablePrefix}${referrer.referrerPropertyNameInitCap}")
#set ($referrerEntityLongClassName = "${myExtendedEntityPackageName}.${referrerEntityClassName}")
        if (entity.hasReferrerElements${referrer.referrerJavaBeansRulePropertyNameInitCap}()) {
			final ${referrerEntityClassName}Mapper mapper = new ${referrerEntityClassName}Mapper();
			for (${glPackageExtendedEntity}.${referrer.refererTableExtendedEntityClassName} element : entity.get${referrer.referrerJavaBeansRulePropertyNameInitCap}()) {
                dto.get${referrer.referrerJavaBeansRulePropertyNameInitCap}().add(mapper.map(element));
			}
		};
#end
        return dto;
	}
}
