${database.allClassCopyright}package ${glPackageCQ};

#set ($myClassName = "${myConditionQueryClassName}")

import ${glPackageBaseCommonCBean}.${glConditionQueryInterfaceName};
import ${glPackageBaseCommonSqlClause}.${glSqlClauseName};
import ${glPackageBaseCQ}.${myBaseConditionQueryClassName};

/**
 * The condition-query of ${table.name}.
 * 
 * @author ${database.ClassAuthor}
 */
public class ${myClassName} extends ${myBaseConditionQueryClassName} {

    // =====================================================================================
    //                                                                           Constructor
    //                                                                           ===========
    /**
     * Constructor.
     * 
     * @param childQuery Child query as abstract class. (Nullable: If null, this is base instance.)
     * @param sqlClause SQL clause instance. (NotNull)
     * @param aliasName My alias name. (NotNull)
     * @param nestLevel Nest level.
     */
    public ${myClassName}(${glConditionQueryInterfaceName} childQuery, ${glSqlClauseName} sqlClause, String aliasName, int nestLevel) {
        super(childQuery, sqlClause, aliasName, nestLevel);
    }
}
