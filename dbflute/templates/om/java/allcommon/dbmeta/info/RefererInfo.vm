${database.allClassCopyright}package ${glPackageBaseCommonDBMetaInfo};

#set ($myClassName = "${glRefererInfoName}")

import ${glPackageBaseCommonDBMeta}.${glDBMetaInterfaceName};

/**
 * The class of referer information.
 * 
 * @author ${database.ClassAuthor}
 */
public class ${myClassName} implements ${glRelationInfoName} {

#set ($genericsColumnInfoMap = "${glColumnInfoName}, ${glColumnInfoName}")
    // ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
    protected String refererPropName;
    protected ${glDBMetaInterfaceName} localDBMeta;
    protected ${glDBMetaInterfaceName} refererDBMeta;
    protected java.util.Map${database.filterGenericsString($genericsColumnInfoMap)} localRefererColumnInfoMap;
    protected boolean oneToOne;

    // ===================================================================================
    //                                                                           Implement
    //                                                                           =========
    public String getRelationPropName() {
        return getRefererPropName();
    }

    public ${glDBMetaInterfaceName} getTargetDBMeta() {
        return getRefererDBMeta();
    }

    public java.util.Map${database.filterGenericsString($genericsColumnInfoMap)} getLocalTargetColumnInfoMap() {
        return getLocalRefererColumnInfoMap();
    }

    public boolean isReferer() {
        return true;
    }

    // ===================================================================================
    //                                                                            Accessor
    //                                                                            ========
    public String getRefererPropName() {
        return refererPropName;
    }

    public void setRefererPropName(String refererPropName) {
        this.refererPropName = refererPropName;
    }

    public ${glDBMetaInterfaceName} getLocalDBMeta() {
        return localDBMeta;
    }

    public void setLocalDBMeta(${glDBMetaInterfaceName} localDBMeta) {
        this.localDBMeta = localDBMeta;
    }

    public ${glDBMetaInterfaceName} getRefererDBMeta() {
        return refererDBMeta;
    }

    public void setRefererDBMeta(${glDBMetaInterfaceName} refererDBMeta) {
        this.refererDBMeta = refererDBMeta;
    }

    public java.util.Map${database.filterGenericsString($genericsColumnInfoMap)} getLocalRefererColumnInfoMap() {
        return localRefererColumnInfoMap;
    }

    public void setLocalRefererColumnInfoMap(java.util.Map${database.filterGenericsString($genericsColumnInfoMap)} localRefererColumnInfoMap) {
        this.localRefererColumnInfoMap = localRefererColumnInfoMap;
    }

    public boolean isOneToOne() {
        return oneToOne;
    }

    public void setOneToOne(boolean oneToOne) {
        this.oneToOne = oneToOne;
    }
}
