${database.allClassCopyright}package ${glPackageBaseCommonBhvCoreCommand};

import java.util.List;

import org.seasar.extension.jdbc.ResultSetHandler;
import org.seasar.dao.BeanMetaData;

import ${glPackageBaseCommon}.${glEntityInterfaceName};
import ${glPackageBaseCommonBhvCore}.${glSqlExecution};
import ${glPackageBaseCommonBhvCore}.${glSqlExecutionCreator};
import ${glPackageBaseCommonCBean}.${glConditionBeanInterfaceName};
import ${glPackageBaseCommonCBeanOutsidesql}.${glOutsideSqlOptionName};

/**
 * @author ${database.ClassAuthor}
 */
public abstract class ${glAbstractEntityCommand} extends ${glAbstractBehaviorCommand} {

    // ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
    /** The instance of condition-bean. (Required) */
    protected ${glEntityInterfaceName} _entity;

    // ===================================================================================
    //                                                                   Basic Information
    //                                                                   =================
    public Class<?> getCommandReturnType() {
        return int.class;
    }

    // ===================================================================================
    //                                                                  Detail Information
    //                                                                  ==================
    public boolean isConditionBean() {
        return false;
    }

    public boolean isOutsideSql() {
        return false;
    }

    public boolean isProcedure() {
        return false;
    }

    public boolean isSelect() {
        return false;
    }

    public boolean isSelectCount() {
        return false;
    }

    // ===================================================================================
    //                                                                    Process Callback
    //                                                                    ================
    public void beforeGettingSqlExecution() {
    }

    public void afterExecuting() {
    }

    // ===================================================================================
    //                                                               SqlExecution Handling
    //                                                               =====================
    public String buildSqlExecutionKey() {
        assertStatus("buildSqlExecutionKey");
        return _tableDbName + ":" + getCommandName() + "(" + _entityType.getSimpleName() + ")";
    }

    public Object[] getSqlExecutionArgument() {
        assertStatus("getSqlExecutionArgument");
        return new Object[] { _entity };
    }

    // ===================================================================================
    //                                                                Argument Information
    //                                                                ====================
    public ${glConditionBeanInterfaceName} getConditionBean() {
        return null;
    }

    public String getOutsideSqlPath() {
        return null;
    }

    public ${glOutsideSqlOptionName} getOutsideSqlOption() {
        return null;
    }

    // ===================================================================================
    //                                                                       Assert Helper
    //                                                                       =============
    protected void assertStatus(String methodName) {
        assertBasicProperty(methodName);
        assertComponentProperty(methodName);
    }

    // ===================================================================================
    //                                                                            Accessor
    //                                                                            ========
    public void setEntity(${glEntityInterfaceName} entity) {
        _entity = entity;
    }
}
