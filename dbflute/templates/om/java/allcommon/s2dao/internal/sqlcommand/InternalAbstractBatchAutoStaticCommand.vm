${database.allClassCopyright}package ${glPackageBaseCommonS2DaoInternalSqlCommand};

import javax.sql.DataSource;

import org.seasar.extension.jdbc.StatementFactory;
import org.seasar.dao.BeanMetaData;
import org.seasar.dao.impl.AbstractBatchAutoHandler;

/**
 * @author ${database.ClassAuthor}
 */
public abstract class ${glInternalAbstractBatchAutoStaticCommand} extends ${glInternalAbstractAutoStaticCommand} {

	// ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
    protected final boolean returningRows;

	// ===================================================================================
    //                                                                         Constructor
    //                                                                         ===========
    public ${glInternalAbstractBatchAutoStaticCommand}(DataSource dataSource,
            StatementFactory statementFactory, BeanMetaData beanMetaData,
            String[] propertyNames, boolean returningRows) {
        super(dataSource, statementFactory, beanMetaData, propertyNames);
        this.returningRows = returningRows;
    }

	// ===================================================================================
    //                                                                             Execute
    //                                                                             =======
    public Object execute(Object[] args) {
        AbstractBatchAutoHandler handler = createBatchAutoHandler();
        
		// It is unnecessary!
		// injectDaoClass(handler);
        
		handler.setSql(getSql());
        if (this.returningRows) {
            return handler.executeBatch(args);
        } else {
            int updatedRows = handler.execute(args);
            return new Integer(updatedRows);
        }
    }
	
    protected abstract AbstractBatchAutoHandler createBatchAutoHandler();
}
