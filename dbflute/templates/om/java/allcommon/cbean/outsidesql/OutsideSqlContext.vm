${database.allClassCopyright}package ${glPackageBaseCommonCBeanOutsidesql};

import org.seasar.framework.util.InputStreamReaderUtil;
import org.seasar.framework.util.ReaderUtil;
import org.seasar.framework.util.ResourceUtil;

/**
 * The context of outside-sql.
 * 
 * @author ${database.ClassAuthor}
 */
public class ${glOutsideSqlContextName} {

    // ===================================================================================
    //                                                                        Thread Local
    //                                                                        ============
    /** The thread-local for this. */
    private static final ThreadLocal<${glOutsideSqlContextName}> _threadLocal = new ThreadLocal<${glOutsideSqlContextName}>();

    /**
     * Get outside-sql context on thread.
     * 
     * @return Outside-sql context. (Nullable)
     */
    public static ${glOutsideSqlContextName} getOutsideSqlContextOnThread() {
        return (${glOutsideSqlContextName})_threadLocal.get();
    }

    /**
     * Set outside-sql context on thread.
     * 
     * @param outsideSqlContext Outside-sql context. (NotNull)
     */
    public static void setOutsideSqlContextOnThread(${glOutsideSqlContextName} outsideSqlContext) {
        if (outsideSqlContext == null) {
            String msg = "The argument[outsideSqlContext] must not be null.";
            throw new IllegalArgumentException(msg);
        }
        _threadLocal.set(outsideSqlContext);
    }

    /**
     * Is existing outside-sql context on thread?
     * 
     * @return Determination.
     */
    public static boolean isExistOutsideSqlContextOnThread() {
        return (_threadLocal.get() != null);
    }

    /**
     * Clear outside-sql context on thread.
     */
    public static void clearOutsideSqlContextOnThread() {
        _threadLocal.set(null);
    }

    // ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
    // -----------------------------------------------------
    //                                  Common of OutsideSql
    //                                  --------------------
    private boolean _dynamicAnalysis;

    private boolean _offsetByCursorForcedly;

    private boolean _limitByCursorForcedly;

    // -----------------------------------------------------
    //                                  Specified OutsideSql
    //                                  --------------------
    /** The path of outside-sql. (The mark of Specified-OutsideSql) */
    protected String _outsideSqlPath;

    protected Object _parameterBean;

    protected Object _resultTypeSpecification;

    protected String _methodName;

    // ===================================================================================
    //                                                                            Read SQL
    //                                                                            ========
    public String readOutsideSqlPath(String sqlFileEncoding) {
        final String dbmsPath = _outsideSqlPath; // TODO: @jflute -- Not Resolved
        final String standardPath = _outsideSqlPath;
        if (ResourceUtil.isExist(dbmsPath)) {
            return readText(dbmsPath, sqlFileEncoding);
        } else if (ResourceUtil.isExist(standardPath)) {
            return readText(standardPath, sqlFileEncoding);
        } else {
            String msg = "Not found the path: " + standardPath; // TODO: @jflute -- TO Make Rich Message!
            throw new IllegalStateException(msg);
        }
    }

    // ===================================================================================
    //                                                                       Determination
    //                                                                       =============
    public boolean isSpecifiedOutsideSql() {
        return _outsideSqlPath != null;
    }

    // ===================================================================================
    //                                                                              Helper
    //                                                                              ======
    protected String readText(final String path, String sqlFileEncoding) {
        final java.io.InputStream is = ResourceUtil.getResourceAsStream(path);
        final java.io.Reader reader = InputStreamReaderUtil.create(is, sqlFileEncoding);
        return ReaderUtil.readText(reader);
    }

    // ===================================================================================
    //                                                                            Accessor
    //                                                                            ========
    // -----------------------------------------------------
    //                                  Common of OutsideSql
    //                                  --------------------
    public boolean isDynamicAnalysis() {
        return _dynamicAnalysis;
    }

    public void setDynamicAnalysis(boolean dynamicAnalysis) {
        this._dynamicAnalysis = dynamicAnalysis;
    }

    public boolean isOffsetByCursorForcedly() {
        return _offsetByCursorForcedly;
    }

    public void setOffsetByCursorForcedly(boolean offsetByCursorForcedly) {
        this._offsetByCursorForcedly = offsetByCursorForcedly;
    }
    
    public boolean isLimitByCursorForcedly() {
        return _limitByCursorForcedly;
    }

    public void setLimitByCursorForcedly(boolean limitByCursorForcedly) {
        this._limitByCursorForcedly = limitByCursorForcedly;
    }

    // -----------------------------------------------------
    //                                  Specified OutsideSql
    //                                  --------------------
    public String getOutsideSqlPath() {
        return _outsideSqlPath;
    }

    public void setOutsideSqlPath(String outsideSqlPath) {
        this._outsideSqlPath = outsideSqlPath;
    }

    public Object getParameterBean() {
        return _parameterBean;
    }

    public void setParameterBean(Object parameterBean) {
        this._parameterBean = parameterBean;
    }

    public Object getResultTypeSpecification() {
        return _resultTypeSpecification;
    }

    public void setResultTypeSpecification(Object resultTypeSpecification) {
        this._resultTypeSpecification = resultTypeSpecification;
    }

    public String getMethodName() {
        return _methodName;
    }

    public void setMethodName(String methodName) {
        this._methodName = methodName;
    }

}
