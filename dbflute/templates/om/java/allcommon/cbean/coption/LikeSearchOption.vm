package ${glPackageBaseCommonCOption};

#set ($myClassName = "${glConditionOptionLikeSearchName}")

/**
 * The class of like-search-option.
 * 
 * @author ${database.ClassAuthor}
 */
public class ${myClassName} extends ${glConditionOptionSimpleStringName} {

    protected static final String LIKE_PREFIX = "prefix";
    protected static final String LIKE_SUFFIX = "suffix";
    protected static final String LIKE_CONTAIN = "contain";

    protected String _like;
    protected String _escape;

    // =====================================================================================
    //                                                                           Rear Option
    //                                                                           ===========
    public String getRearOption() {
        if (_escape == null || _escape.trim().length() == 0) {
            return "";
        }
        return " escape '" + _escape + "'";
    }

    // =====================================================================================
    //                                                                                  Like
    //                                                                                  ====
    public ${myClassName} likePrefix() {
        _like = LIKE_PREFIX;
        return this;
    }
    public ${myClassName} likeSuffix() {
        _like = LIKE_SUFFIX;
        return this;
    }
    public ${myClassName} likeContain() {
        _like = LIKE_CONTAIN;
        return this;
    }

    // =====================================================================================
    //                                                                                Escape
    //                                                                                ======
    public ${myClassName} escapeByPipeLine() {
        _escape = "|";
        return this;
    }

    public ${myClassName} escapeByAtMark() {
        _escape = "@";
        return this;
    }

    public ${myClassName} escapeBySlash() {
        _escape = "/";
        return this;
    }

    public ${myClassName} escapeByBackSlash() {
        _escape = "\\";
        return this;
    }

    // =====================================================================================
    //                                                                            Real Value
    //                                                                            ==========
    public String generateRealValue(String value) {
        value = super.generateRealValue(value);

        // Escape
        if (_escape != null && _escape.trim().length() != 0) {
            String tmp = replace(value, _escape, _escape + _escape);
            tmp = replace(tmp, "%", _escape + "%");
            tmp = replace(tmp, "_", _escape + "_");
            value = tmp;
        }
        final String wildCard = "${database.wildCard}";
        if (_like == null || _like.trim().length() == 0) {
            return value;
        } else if (_like.equals(LIKE_PREFIX)) {
            return value + wildCard;
        } else if (_like.equals(LIKE_SUFFIX)) {
            return wildCard + value;
        } else if (_like.equals(LIKE_CONTAIN)) {
            return wildCard + value + wildCard;
        } else {
            String msg = "The like was wrong string: " + _like;
            throw new IllegalStateException(msg);
        }
    }
}
