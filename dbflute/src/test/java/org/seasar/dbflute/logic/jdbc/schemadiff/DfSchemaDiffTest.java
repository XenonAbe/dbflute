package org.seasar.dbflute.logic.jdbc.schemadiff;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.seasar.dbflute.unit.PlainTestCase;

/**
 * @author jflute
 * @since 0.9.7.1 (2010/06/12 Saturday)
 */
public class DfSchemaDiffTest extends PlainTestCase {

    @Test
    public void test_isSameConstraintName() throws Exception {
        // ## Arrange ##
        DfSchemaDiff diff = createAsDerby();

        // ## Act ##
        assertTrue(diff.isAutoGeneratedConstraintName("SQL100612171234260", "SQL100612171255260"));
        assertFalse(diff.isAutoGeneratedConstraintName("QQL100612171234260", "SQL100612171255260"));
        assertFalse(diff.isAutoGeneratedConstraintName("SYS_100612171234260", "SYS_100612171255260"));
    }

    protected DfSchemaDiff createAsDerby() {
        return new DfSchemaDiff() {
            @Override
            protected boolean isDatabaseOracle() {
                return false;
            }

            @Override
            protected boolean isDatabaseDB2() {
                return false;
            }

            @Override
            protected boolean isDatabaseSQLServer() {
                return false;
            }

            @Override
            protected boolean isDatabaseH2() {
                return false;
            }

            @Override
            protected boolean isDatabaseDerby() {
                return true;
            }
        };
    }
}
