#set ($myClassName = "${glSqlClause}MsAccess")

using System;

using ${glPackageBaseCommonJavaLike};

namespace ${glPackageBaseCommonSqlClause} {

[System.Serializable]
public class ${myClassName} : ${glAbstractSqlClause} {

    public ${myClassName}(String tableName)
        : base(tableName) {}

	protected override bool isJoinInParentheses() {
	    return true; // needs to join in parentheses at MS Access
	}

    public override void registerOuterJoin(String joinTableName, String aliasName, Map<String, String> joinOnMap) {
        String fixedConditionKey = getFixedConditionKey();
        String fixedCondition = joinOnMap.get(fixedConditionKey);
        if (fixedCondition != null) {
            // because fixed condition for join-on is unsupported at MS Access 
            registerWhereClause(fixedCondition);
            joinOnMap.remove(fixedConditionKey);
        }
        base.registerOuterJoin(joinTableDbName, aliasName, joinOnMap);
    }

	protected override OrderByNullsSetupper createOrderByNullsSetupper() {
	    return new OrderByNullsSetupperByCaseWhen();
	}
	
    protected override void doFetchFirst() {
    }

    protected override void doFetchPage() {
    }

    protected override void doClearFetchPageClause() {
    }

    public override bool isFetchStartIndexSupported() {
        return false; // Default
    }

    public override bool isFetchSizeSupported() {
        return false; // Default
    }

    public override ${glSqlClause} lockForUpdate() {
        String msg = "LockForUpdate-SQL is unsupported in the database. Sorry...: " + ToString();
        throw new UnsupportedOperationException(msg);
    }

    protected override String createSelectHint() {
        return "";
    }

    protected override String createFromBaseTableHint() {
        return "";
    }

    protected override String createFromHint() {
        return "";
    }

    protected override String createSqlSuffix() {
        return "";
    }
}

}
