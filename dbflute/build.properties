# =======================================================================================
#                                                                                 for All
#                                                                                 =======

# -------------------------------------------------------------------
#  P R O J E C T
# -------------------------------------------------------------------
# Required

torque.project = mspadmin


# -------------------------------------------------------------------
#  T A R G E T  D A T A B A S E
# -------------------------------------------------------------------
# This is the target database, only considered when generating
# the SQL for your Torque project. Your possible choices are:
#
#   axion, cloudscape, db2, db2400, hypersonic, interbase, mssql,
#   mysql, oracle, postgresql, sapdb, sybase, firebird
# -------------------------------------------------------------------
# Required

torque.database = mssql


# -------------------------------------------------------------------
#  O U T P U T  D I R E C T O R Y
# -------------------------------------------------------------------
# Required

torque.java.dir = ../MspadminTrial

torque.java.location.for.main		= 
torque.java.location.for.gen		= /MspadminGen


# =======================================================================================
#                                                                             for OM task
#                                                                             ===========

# /---------------------------------------------------------------------------
# [TargetLanguage] (NotRequired - Default 'java')
#   The target language. Your possible choices are:
#     java, csharp
torque.targetLanguage = csharp
# ----------------/

# /---------------------------------------------------------------------------
# [TemplateFileEncoding] (NotRequired - Default 'Windows-31J')
#   The encoding of Velocity template file.
#   For example, if you use Japanese in the template file,
#   you should set this property 'Windows-31J'.
torque.templateFileEncoding = Windows-31J
# ----------------/

torque.isAvailableEntityLazyLoad = true
torque.isAvailableBehaviorGeneration = true
torque.isAvailableRequiredTransactionInterceptorToBehavior = true
torque.isAvailableCommonColumnSetupInterceptorToBehavior = true

# /---------------------------------------------------------------------------
# [DaoDicon Information]
#   daoDiconNamespace: (NotRequired - Default 'dao')
#     The namespace of dao dicon.
#
#   daoDiconPackageName: (NotRequired - Default null)
#     The package name of dao dicon.
#
#   daoDiconFileName: (NotRequired - Default 'dao.dicon')
#     The file name of dao dicon. (Required)
#
#   j2eeDiconResourceName: (NotRequired - Default 'j2ee.dicon')
#     The resource name of J2EE dicon.
#
#   requiredTxComponentName: (NotRequired - Default 'requiredTx')
#     The component name of 'requiredTx'-component.
#
#   daoDiconOtherIncludeDefinitionMap: (NotRequired - Default 'map:{}')
#     The definition map of dao-dicon's include path.
#
#     *Attension:
#        It is necessary that main dicon of application includes dao dicon.
#
torque.daoDiconNamespace		= Dao
torque.daoDiconPackageName		= MspadminBiz/Dao/Allcommon
torque.daoDiconFileName			= dao.dicon
torque.j2eeDiconResourceName	= MspadminBiz.Ado/ado.dicon
torque.requiredTxComponentName	= LocalRequiredTx
torque.daoDiconOtherIncludeDefinitionMap	= map:{ MspadminBiz.Common/common.dicon = dummy }
# ----------------/

# /---------------------------------------------------------------------------
# [EntityDao Package]
#     Default value is not defined. These properties are required.
torque.baseCommonPackage 		= MspadminBiz.Dao.Allcommon
torque.baseBehaviorPackage 		= MspadminBiz.Dao.Bsbhv
torque.baseDaoPackage 			= MspadminBiz.Dao.Bsdao
torque.baseEntityPackage 		= MspadminBiz.Dao.Bsentity
torque.conditionBeanPackage 	= MspadminBiz.Dao.Cbean
torque.extendedBehaviorPackage 	= MspadminBiz.Dao.Exbhv
torque.extendedDaoPackage 		= MspadminBiz.Dao.Exdao
torque.extendedEntityPackage 	= MspadminBiz.Dao.Exentity
# ----------------/

# /---------------------------------------------------------------------------
# [Sequence & Identity] (NotRequired - Default 'map:{}')
#   sequenceDefinitionMap: (NotNull - map-property or empty(map:{}))
#     The method 'XxxDao#selectNextVal()' is generated for its table primary key.
#
#       ex) public String selectNextVal_SQL = "select gen_id(BOOK_BOOK_ID_INC, 1) from RDB$DATABASE";
#           public java.math.BigInteger selectNextVal();
#           // This example is for the database of Firebird
# 
#   identityDefinitionMap: (NotRequired - Default 'map:{}')
#     ID annotation of s2dao is generated for its table primary key.
#
#       ex) public static final String bookId_ID = "identity";
#
torque.identityDefinitionMap	= map:{	\
		shop_Address	=	address_id	\
		; mng_Agreement	=	agreement_id	\
		; mng_Banner	=	banner_id	\
		; shop_ShareStage_Card	=	card_id	\
		; shop_ChildTrack	=	child_track_id	\
		; shop_ChildTrackLicense	=	child_track_license_id	\
		; shop_ClientInfoFail	=	client_info_fail_id	\
		; ContentsSync_DateManage	=	cs_datemanage_id	\
		; ContentsSync_History	=	cs_history_id	\
		; shop_Customer	=	customer_id	\
		; cs_Enquate	=	enquate_id	\
		; mng_faq	=	faq_id	\
		; batch_Folder	=	folder_id	\
		; mng_FreeSpace	=	free_id	\
		; mng_Help	=	help_id	\
		; dtproperties	=	id	\
		; mng_Information	=	info_id	\
		; mng_PackageInfo	=	info_id	\
		; mng_ArtistInfo	=	info_id	\
		; shop_Item	=	item_id	\
		; batch_Job	=	job_id	\
		; shop_License	=	license_id	\
		; shop_SalesReport	=	sales_id	\
		; mng_MusicRankingList	=	list_id	\
		; mng_PickupArtistList	=	list_id	\
		; mng_PickupList	=	list_id	\
		; mng_PronanceList1	=	list_id	\
		; mng_PronanceList2	=	list_id	\
		; mng_AlbumRankingList	=	list_id	\
		; mng_ArtistRankingList	=	list_id	\
		; batch_Log	=	log_id	\
		; mng_NewRelease	=	new_id	\
		; shop_OrderDetail	=	order_detail_id	\
		; shop_Order	=	order_id	\
		; mng_Pickup	=	pickup_id	\
		; mng_PickupArtist	=	pickup_id	\
		; mng_MusicRanking	=	ranking_id	\
		; mng_AlbumRanking	=	ranking_id	\
		; mng_ArtistRanking	=	ranking_id	\
		; mng_SpecialIssue	=	special_id	\
		; staff	=	staff_id	\
		; auth_func	=	func_id	\
		; auth_GroupFuncAss	=	group_func_id	\
		; auth_Group	=	group_id	\
		; auth_StaffFuncAss	=	staff_func_id	\
		; auth_StaffGroupAss	=	staff_group_id	\
		; shop_StoreLicenseFail	=	store_license_fail_id	\
		; cs_Support	=	support_id	\
		; ContentsSync_Detail	=	syncdetail_id	\
		; shop_ShareStage_Uriage	=	uriage_id	\
		; shop_RightsParams_WMT9	=	wmrm_id \
		; mng_MailTemplate	=	mail_template_id \
	}


# ----------------/

# /--------------------------------------------------------------------------
# [Optimistic Lock]
#   updateDateFieldName: (NotRequired - Default null)
#     The field name of update-date. 
#     For example, if this property id 'UPDATE_DATE',
#     the annotation is generated as follows:
#       public static final String TIMESTAMP_PROPERTY = "updateDate";
#
#   versionNoFieldName: (NotRequired - Default null)
#     The field name of version-no. 
#     For example, if this property id 'VERSION_NO'
#     the annotation is generated as follows:
#       public static final String VERSION_NO_PROPERTY = "versionNo";
#
torque.updateDateFieldName	= upd_date
# ----------------/

# /---------------------------------------------------------------------------
# [Common Column]
#   commonColumnMap: (NotRequired - Default 'map:{}')
#     The map of common column.
#     Default value is enmpty-map.
#     For example, The date you registered the record, The staff who updated the record and so on...
#
#     ex) map:{R_TIME=TIMESTAMP;U_TIME=TIMESTAMP;R_STAFF=VARCHAR;U_STAFF=VARCHAR}
#
#   commonColumnSetupBeforeInsertInterceptorLogicMap: (NotNull - map-property or empty(map:{}))
#   commonColumnSetupBeforeUpdateInterceptorLogicMap: (NotNull - map-property or empty(map:{}))
#   commonColumnSetupBeforeDeleteInterceptorLogicMap: (NotNull - map-property or empty(map:{}))
#     (NotRequired - Default 'map:{}')
#     ex) map:{ \
#           R_TIME=new java.sql.Timestamp(System.currentTimeMillis()) \
#           ; R_STAFF=$entity.classifyRStaffAdministrator()$$Semicolon$$ \
#           ; U_STAFF=entity.getRStaff() \
#         }
#     ex) map:{ \
#           U_STAFF="update-interceptor" \
#         }
#      *Normally, setting login user from session. (This is a sample to the end.)
#
torque.commonColumnMap = map:{reg_date=TIMESTAMP;reg_staff_id=NUMERIC;upd_date=TIMESTAMP;upd_staff_id=NUMERIC;action=CHAR}

torque.commonColumnSetupBeforeInsertInterceptorLogicMap = map:{ \
        reg_date=MspadminBiz.Common.MspadminContext.GetCurrentDateTime() \
        ; reg_staff_id=MspadminBiz.Common.MspadminContext.GetLoginStaffId() \
        ; upd_staff_id=entity.RegStaffId \
        ; action=$entity.ClassifyActionAdd()$$Semicolon$$ \
    }

torque.commonColumnSetupBeforeUpdateInterceptorLogicMap = map:{ \
        upd_staff_id=MspadminBiz.Common.MspadminContext.GetLoginStaffId() \
        ; action=$if (!entity.IsActionDelete()) $$StartBrace$$entity.ClassifyActionChange()$$Semicolon$$$$EndBrace$$ \
    }

torque.commonColumnSetupBeforeDeleteInterceptorLogicMap = map:{}
# ----------------/

# /---------------------------------------------------------------------------
# [Logical Delete Column]
#   logicalDeleteColumnValueMap: (NotRequired - Default 'map:{}')
#     If you set this property, the method 'logicalDeleteXxx()' is generated at behavior-class.
#     The method set up the logical-delete-column as delete by this property.
#
#     ex) map:{ \
#           DEL_DATE=new java.sql.Timestamp(System.currentTimeMillis()) \
#           ; DEL_FLG="y" \
#         }
#
#   *If isAvailableBehaviorGeneration is false, this property is ignored.
#
#   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   *Attension: If common-column contains these logical-delete-columns
#    , the interceptor may override their values.  For example, as follows:
#
#      ex)
#        commonColumnSetupBeforeUpdateInterceptorLogicMap = map:{DEL_FLG="n"}
#        logicalDeleteColumnValueMap = map:{DEL_FLG="y"}
#
#        1. Invoking logicalDeleteXxx(), DEL_FLG is set up by 'y'.
#        2. Invoking delegateUpdate() in logicalDeleteXxx(), DEL_FLG is overrided by 'n' by interceptor.
#
#        So you should do this way:
#
#        commonColumnSetupBeforeUpdateInterceptorLogicMap = map:{DEL_FLG=("y".equals(entity.getDelFlg()) ? "y" : "n")}
#        logicalDeleteColumnValueMap = map:{DEL_FLG="y"}
#
#        The event 'Deleted' should be given priority.
#   - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#   revivalFromLogicalDeleteColumnValueMap: (NotRequired - Default 'map:{}')
#     If you set this property, the method 'revivalFromLogicalDeleteXxx()' is generated at behavior-class.
#     The method set up the logical-delete-column as non-delete by this property.
#
#     ex) map:{ \
#           DEL_DATE=null \
#           ; DEL_FLG="n" \
#         }
#
torque.logicalDeleteColumnValueMap = map:{action=$entity.ClassifyActionDelete()$$Semicolon$$}
torque.revivalFromLogicalDeleteColumnValueMap = map:{action=$entity.ClassifyActionChange()$$Semicolon$$}
# ----------------/

# /---------------------------------------------------------------------------
# [Classification]
#   classificationDefinitionMap: (NotRequired - Default 'map:{}')
#
#     ex) map:{ \
#        CollectionStatus   =   list:{ \
#                                    map:{code=C10;name=ArrivalWait;alias=\u5165\u8377\u5f85\u3061} \
#                                    ; map:{code=C20;name=LendingOk;alias=\u8cb8\u3057\u51fa\u3057OK} \
#                               } \
#        ; BlackAction      =    list:{ \
#                                    map:{code=DRY;name=Destoroy;alias=\u7834\u58ca} \
#                                    ; map:{code=LST;name=Losting;alias=\u7d1b\u5931} \
#                                } \
#        }
#
#   classificationDeploymentMap: (NotRequired - Default 'map:{}')
#
#     ex) map:{ \
#            COLLECTION_STATUS          =    map:{COLLECTION_STATUS_CODE=CollectionStatus} \
#            ; COLLECTION_STATUS_LOOKUP =    map:{COLLECTION_STATUS_CODE=CollectionStatus} \
#            ; BLACK_ACTION             =    map:{BLACK_ACTION_CODE=BlackAction} \
#            ; BLACK_ACTION_LOOKUP      =    map:{BLACK_ACTION_CODE=BlackAction} \
#            ; $$ALL$$                  =    map:{R_STAFF=Staff;U_STAFF=Staff} \
#         }
#
torque.classificationDefinitionMap = map:{ \
		Action				=	list:{ \
									map:{code=a;name=Add;alias=\u8ffd\u52a0} \
									; map:{code=c;name=Change;alias=\u5909\u66f4} \
									; map:{code=d;name=Delete;alias=\u524a\u9664} \
								} \
		; YesNo				=	list:{ \
									map:{code=y;name=Yes;alias=Yes} \
									; map:{code=n;name=No;alias=No} \
								} \
		; ImageHint			=	list:{ \
									map:{code=L;name=Large;alias=Large} \
									; map:{code=M;name=Middle;alias=Middle} \
									; map:{code=S;name=Small;alias=Small} \
								} \
	}

torque.classificationDeploymentMap = map:{ \
		$$ALL$$				=	map:{action=Action} \
		; Image				=	map:{image_hint_code=ImageHint} \
	}
# ----------------/


# /---------------------------------------------------------------------------
# [DefaultFetchSize] (NotRequired - Default '20')
#   The default fetch size of sql-clause(condition-bean) 
#   when invoking fetchPage() without fetchFirst() or fetchScope(). 
#   This is for fetchPage().
torque.fetchPageDefaultFetchSize = 50
# ----------------/

# /---------------------------------------------------------------------------
# [SelectQueryTimeout] (NotRequired - Default '-1')
torque.selectQueryTimeout = MspadminBiz.Common.Config.MspadminConfig.GetSelectCommandTimeOut()
# ----------------/

# /---------------------------------------------------------------------------
# [CustomizeDao]
#   customizeDaoDefinitionMap: (NotRequired - Default 'map:{}')
#
# columnMap: 
#   key   = Column name. (db-name)
#   value = Torque type
#     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#     CHAR, VARCHAR, LONGVARCHAR, NUMERIC, DECIMAL, BIT, TINYINT, SMALLINT
#     , INTEGER, BIGINT, REAL, FLOAT, DOUBLE, BINARY, VARBINARY, LONGVARBINARY
#     , DATE, TIME, TIMESTAMP
#     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -    
#
# importMap: 
#   key   = import clause.
#   value = dummy (unused)
#
# methodMap: 
#   key   = Method name.
#             If the name starts with 'selectEntity' or 'readEntity'
#             , method return type is 'Entity'. Else java.util.List. 
#   value = Method argument.
#
torque.customizeDaoDefinitionMap = map:{ \
		TitleContents = map:{ \
			columnMap = map:{ \
				*title_id=VARCHAR;title_name=VARCHAR;disc_id=BIGINT;disc_no=INTEGER;track_no=INTEGER;track_id=VARCHAR;track_name=VARCHAR \
				;artist_id=VARCHAR;artist_name=VARCHAR;title_artist_id=VARCHAR;title_artist_name=VARCHAR;track_artist_id=VARCHAR;track_artist_name=VARCHAR \
				;*digital_contents_id=VARCHAR;product_id=VARCHAR;mpfuid=VARCHAR;codec_code=CHAR;codec_name=CHAR \
				;contractor_code=VARCHAR;contractor_name=VARCHAR;stop_status_name=CHAR;delivery_start_date=DATE;delivery_end_date=DATE;private_type_code=VARCHAR \
				;private_delivery_type_name=VARCHAR;bundle_digital_contents_id=VARCHAR \
				;price_start_date=DATE;untaxed_wholesale_price=DOUBLE;untaxed_retail_price=DOUBLE \
				;taxed_wholesale_price=DOUBLE;taxed_retail_price=DOUBLE \
				;package_info_id=INTEGER;package_info_text=VARCHAR;package_info_upd_date=DATE \
				;new_release_id=INTEGER;new_release_open_date=DATE;new_release_from_date=DATE \
				;new_release_to_date=DATE;new_release_display_yn=CHAR;new_release_upd_date=DATE \
				;reg_date=DATE;reg_staff_id=NUMERIC \
				;upd_date=DATE;upd_staff_id=NUMERIC;action=CHAR \
			} \
			; importMap = map:{ \
				using MspadminBiz.Dao.Allcommon.cbean = dummy \
				; using MspadminBiz.Dao.Pmbean.exparam = dummy \
			} \
			; methodMap = map:{ \
				SelectCountIgnoreFetchScopeAsContents=TitleContentsPmb pmb \
				; SelectListAsContents=PagingBean pb, TitleContentsPmb pmb \
			} \
			; relationMap = map:{ \
				tableName=Title \
			} \
		} \
		; TrackContents = map:{ \
			columnMap = map:{ \
				title_id=VARCHAR;title_name=VARCHAR;disc_id=BIGINT;disc_no=INTEGER;track_no=INTEGER;*track_id=VARCHAR;track_name=VARCHAR \
				;artist_id=VARCHAR;artist_name=VARCHAR;title_artist_id=VARCHAR;title_artist_name=VARCHAR;track_artist_id=VARCHAR;track_artist_name=VARCHAR \
				;*digital_contents_id=VARCHAR;product_id=VARCHAR;mpfuid=VARCHAR;codec_code=CHAR;codec_name=CHAR \
				;contractor_code=VARCHAR;contractor_name=VARCHAR;stop_status_name=CHAR;delivery_start_date=DATE;delivery_end_date=DATE;private_type_code=VARCHAR \
				;private_delivery_type_name=VARCHAR;bundle_digital_contents_id=VARCHAR \
				;price_start_date=DATE;untaxed_wholesale_price=DOUBLE;untaxed_retail_price=DOUBLE \
				;taxed_wholesale_price=DOUBLE;taxed_retail_price=DOUBLE \
				;title_reg_date=DATE;title_reg_staff_id=NUMERIC \
				;title_upd_date=DATE;title_upd_staff_id=NUMERIC;title_action=CHAR \
				;disc_reg_date=DATE;disc_reg_staff_id=NUMERIC \
				;disc_upd_date=DATE;disc_upd_staff_id=NUMERIC;disc_action=CHAR \
				;reg_date=DATE;reg_staff_id=NUMERIC \
				;upd_date=DATE;upd_staff_id=NUMERIC;action=CHAR \
			} \
			; importMap = map:{ \
				using MspadminBiz.Dao.Allcommon.cbean = dummy \
				; using MspadminBiz.Dao.Pmbean.exparam = dummy \
			} \
			; methodMap = map:{ \
				SelectCountIgnoreFetchScopeAsContents=TrackContentsPmb pmb \
				; SelectListAsContents=PagingBean pb, TrackContentsPmb pmb \
			} \
			; relationMap = map:{ \
				tableName=Track \
			} \
		} \
		; LicenseContainChildTrack = map:{ \
            columnMap = map:{ \
                order_number=INTEGER;*target_table_name=VARCHAR;*target_primary_key=INTEGER;license_id=INTEGER;order_detail_id=INTEGER \
                ;child_track_license_id=INTEGER;child_track_id=INTEGER;mpfuid=VARCHAR;issue_date=DATE;license_param_exist=BIT;receipt_id=VARCHAR \
                ;track_name=VARCHAR;disc_no=INTEGER;track_no=INTEGER \
                ;reg_date=DATE;reg_staff_id=INTEGER;upd_date=DATE;upd_staff_id=INTEGER;action=VARCHAR;upd_staff_name=VARCHAR \
            } \
            ; importMap = map:{ \
                using MspadminBiz.Dao.Allcommon.cbean = dummy \
            } \
            ; methodMap = map:{ \
                SelectListLicenseContainChildTrack=PagingBean pb, Nullables.NullableDecimal orderDetailId, Nullables.NullableDecimal shopId, String orderByPlus \
            } \
            ; relationMap = map:{ \
                tableName=view_Direction \
            } \
        } \
		; ShopSalesReportSummary = map:{ \
            columnMap = map:{ \
                *sales_date=VARCHAR;sale_price_sum=INTEGER;campaign_price_sum=INTEGER;cost_price_sum=INTEGER;sales_count=INTEGER \
                ;mpfuid=VARCHAR;track_name=VARCHAR;title_name=VARCHAR;artist_name=VARCHAR;contractor_code=VARCHAR;label_name=VARCHAR \
                ;week_count=INTEGER;title_id=VARCHAR;track_id=VARCHAR;artist_id=VARCHAR \
                ;search_target_from_date=DATE;search_target_to_date=DATE \
            } \
            ; importMap = map:{ \
                using MspadminBiz.Dao.Allcommon.cbean = dummy \
            } \
            ; methodMap = map:{ \
                SelectListMonthlySales=Nullables.NullableDateTime fromDate, Nullables.NullableDateTime toDate \
                ; SelectListMonthlyArtistSales=Nullables.NullableDateTime fromDate, Nullables.NullableDateTime toDate \
                ; SelectListMonthlyLabelSales=Nullables.NullableDateTime fromDate, Nullables.NullableDateTime toDate \
                ; SelectListProductSales=Nullables.NullableDateTime fromDate, Nullables.NullableDateTime toDate, int leftNum \
                ; SelectListWeeklyProductSales=Nullables.NullableDateTime fromDate, Nullables.NullableDateTime toDate \
            } \
            ; relationMap = map:{ \
                tableName=shop_SalesReport \
            } \
        } \
		; OrderDetailInfo = map:{ \
            columnMap = map:{ \
                *order_detail_id=INTEGER;order_id=INTEGER;mpfuid=VARCHAR;sale_price=INTEGER;cost_price=INTEGER;campaign_price=INTEGER \
                ;settletype_id=INTEGER;orderstatus_id=INTEGER;date=DATE;settle_type_name=VARCHAR;order_status_name=VARCHAR \
                ;fcpid=VARCHAR;wm_card_code=VARCHAR;non_payment_yn=VARCHAR;digicon_id=VARCHAR;contractor_code=VARCHAR;contractor_name=VARCHAR \
                ;title_id=VARCHAR;title_name=VARCHAR;track_id=VARCHAR;track_name=VARCHAR;artist_id=VARCHAR;artist_name=VARCHAR \
                ;title_artist_id=VARCHAR;title_artist_name=VARCHAR;track_artist_id=VARCHAR;track_artist_name=VARCHAR; \
                ;orderkind_id=VARCHAR;orderkind_name=VARCHAR \
            } \
            ; importMap = map:{ \
                using MspadminBiz.Dao.Allcommon.cbean = dummy \
				; using MspadminBiz.Dao.Pmbean.exparam = dummy \
            } \
            ; methodMap = map:{ \
                SelectCountIgnoreFetchScopeAsOrderDetailInfo=OrderDetailInfoPmb pmb \
                ; SelectListAsOrderDetailInfo=PagingBean pb, OrderDetailInfoPmb pmb \
            } \
            ; relationMap = map:{ \
                tableName=shop_OrderDetail \
            } \
        } \
		; AuthInfo = map:{ \
		    columnMap = map:{ \
		        *func_id=INTEGER ; func_code=CHAR ; func_name=VARCHAR ; read_yn=CHAR ; write_yn=CHAR ; page_url=VARCHAR \
		    } \
		    ; importMap = map:{ \
		    } \
		    ; methodMap = map:{ \
		        SelectListAsStaffAuthInfo=Nullables.NullableDecimal staffId \
				;SelectListAsGroupAuthInfo=Nullables.NullableDecimal staffId \
		    } \
		    ; relationMap = map:{ \
		        tableName=auth_func \
		    } \
		} \
	}
# ----------------/

# /---------------------------------------------------------------------------
# [SqlParameterBean Definition]
#
torque.sqlParameterBeanPackage = MspadminBiz.Dao.Pmbean
torque.sqlParameterBeanDefinitionMap = map:{ \
		TitleContentsPmb = map:{ \
			isTargetSearchDelivery=bool;isSelectDigiconPrice=bool;isBundleExistEffective=bool \
			;isTitleDeleteNarrowingEffective=bool;isSelectDistinguishedArtist=bool \
			;isSelectPackageInfo=bool;isSelectPackageInfoText=bool;IsSelectNewRelease=bool \
			;productId=String;digitalContentsId=String;contractorCode=String;privateTypeCode=String \
			;titleId=String;trackId=String;artistId=String;titleName=String;trackName=String;artistName=String \
			;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; TrackContentsPmb = map:{ \
			isTargetSearchDelivery=bool;isSelectDigiconPrice=bool;isBundleExistEffective=bool \
			;isTrackDeleteNarrowingEffective=bool;isSelectDistinguishedArtist=bool \
			;productId=String;digitalContentsId=String;contractorCode=String;privateTypeCode=String \
			;titleId=String;trackId=String;artistId=String;titleName=String;trackName=String;artistName=String \
			;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; NewReleaseInfoPmb = map:{ \
			;isTitleDeleteNarrowingEffective=bool \
			;newId=Nullables.NullableDecimal;titleId=String;fromOpenDate=Nullables.NullableDateTime;toOpenDate=Nullables.NullableDateTime \
			;fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime;isDeleteNarrowingEffective=bool;isSelectDisplayOnly=bool \
			;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; OrderDetailInfoPmb = map:{orderId=Nullables.NullableDecimal;mpfuid=String;titleName=String;trackName=String;artistName=String \
						;contractorCode=String;fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime \
						;settletypeId=Nullables.NullableDecimal;orderstatusId=Nullables.NullableDecimal;fcpid=String;wmCardCode=String \
						;nonPaymentYn=String;orderstatus_id=Nullables.NullableDecimal \
						;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; CustomerCardPmb = map:{customerId=Nullables.NullableDecimal;account=String;sei=String;mei=String;seiKana=String \
							;meiKana=String;sex=String;notifyMailYn=String;rejectYn=String;forceRejectYn=String \
							;nonPaymentYn=String ; fcpid=String ; customerGuid=String ; isSelectForCsv=bool \
							;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; PickupListSimplePmb = map:{listId=Nullables.NullableDecimal;orderNr=Nullables.NullableDecimal \
							;pickupId=Nullables.NullableDecimal \
							;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; MusicRankingListSimplePmb = map:{listId=Nullables.NullableDecimal;orderNr=Nullables.NullableDecimal \
							;rankingId=Nullables.NullableDecimal \
							;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; AlbumRankingListSimplePmb = map:{listId=Nullables.NullableDecimal;orderNr=Nullables.NullableDecimal \
							;rankingId=Nullables.NullableDecimal \
							;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; ArtistRankingListSimplePmb = map:{listId=Nullables.NullableDecimal;orderNr=Nullables.NullableDecimal \
							;rankingId=Nullables.NullableDecimal \
							;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; ArtistInfoPmb = map:{ \
			artistId=String ; artistName=String ; artistYomi=String \
			;shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
		; MailTemplateSimplePmb = map:{mailTemplateId=Nullables.NullableDecimal ; mailTemplateCode=String \
									; IsSelectTitleAndText=bool ; IsForUpdate=bool \
									; shopId=Nullables.NullableDecimal-MspadminBiz.Common.MspadminContext.GetShopId() \
		} \
	}
# ----------------/

# /---------------------------------------------------------------------------
# [Argument-Bean]
#
torque.argumentBeanPackage = MspadminBiz.Facade.ArgumentBean
torque.argumentBeanDefinitionMap = map:{ \
		FreeSpaceAB = map:{freeId=Nullables.NullableDecimal;name=String;position=String \
							; fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime \
							; isTargetActionDelete=bool-true \
					} \
		; InformationAB = map:{infoId=Nullables.NullableDecimal;name=String;fromOpenDate=Nullables.NullableDateTime;toOpenDate=Nullables.NullableDateTime \
								; fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime \
								; isTargetActionDelete=bool-true;isDisplayYn=bool \
							} \
		; NewReleaseAB = map:{isTitleDeleteNarrowingEffective=bool-true \
								; newId=Nullables.NullableDecimal;titleId=String;fromOpenDate=Nullables.NullableDateTime;toOpenDate=Nullables.NullableDateTime \
								; fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime;isDeleteNarrowingEffective=bool;isSelectDisplayOnly=bool \
						} \
		; MusicRankingAB = map:{rankingId=Nullables.NullableDecimal;name=String;genreCode=String;fromDate=Nullables.NullableDateTime \
								; toDate=Nullables.NullableDateTime ; isTargetActionDelete=bool-true ; countUnitCode=String \
							} \
		; ArtistRankingAB = map:{rankingId=Nullables.NullableDecimal ; name=String ; genreCode=String \
								; fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime;isTargetActionDelete=bool-true \
								; countUnitCode=String \
							} \
		; SpecialIssueAB = map:{specialId=Nullables.NullableDecimal;name=String;genreCode=String \
								; toOpenDate=Nullables.NullableDateTime;fromOpenDate=Nullables.NullableDateTime \
								; fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime;isTargetActionDelete=bool-true \
						} \
		; PickupAB = map:{pickupId=Nullables.NullableDecimal;position=String;genreCode=String;name=String \
							; fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime \
							; isTargetActionDelete=bool-true \
					} \
		; BannerAB = map:{bannerId=Nullables.NullableDecimal;name=String;position=String \
							; fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime \
							; isTargetActionDelete=bool-true;isActiveYn=bool \
					} \
		; ArtistInfoAB = map:{artistId=String;artistName=String;artistYomi=String} \
		; ContentsSearchAB = map:{isTargetSearchTitle=bool-true \
									; isTargetSearchDelivery=bool-true ; isSelectDigiconPrice=bool ; isBundleExistEffective=bool \
									; isTitleDeleteNarrowingEffective=bool-true ; isTrackDeleteNarrowingEffective=bool-true \
									; productId=String ; digitalContentsId=String;contractorCode=String ; privateTypeCode=String \
									; titleId=String ; trackId=String ; artistId=String ; titleName=String \
									; trackName=String ; artistName=String} \
		; ProductAB = map:{isTargetSearchTitle=bool-true \
									; isTargetSearchDelivery=bool-true ; isSelectDigiconPrice=bool ; isBundleExistEffective=bool \
									; isTitleDeleteNarrowingEffective=bool-true ; isTrackDeleteNarrowingEffective=bool-true \
									; isSelectDistinguishedArtist=bool-true \
									; productId=String ; digitalContentsId=String ; contractorCode=String ; privateTypeCode=String \
									; titleId=String ; trackId=String ; artistId=String ; titleName=String \
									; trackName=String ; artistName=String} \
		; PackageInfoAB = map:{isSelectPackageInfo=bool-true;isSelectPackageInfoText=bool-true \
									; isTargetSearchDelivery=bool-true ; isTitleDeleteNarrowingEffective=bool-true ; isBundleExistEffective=bool \
									; productId=String ; digitalContentsId=String ; contractorCode=String ; privateTypeCode=String \
									; titleId=String ; trackId=String ; artistId=String ; titleName=String \
									; trackName=String ; artistName=String} \
		; ArtistSearchAB = map:{artistId=String ; artistName=String ; artistYomi=String} \
		; CustomerAB = map:{customerId=Nullables.NullableDecimal;account=String;sei=String;mei=String;seiKana=String \
							;meiKana=String;sex=String;notifyMailYn=String;rejectYn=String;forceRejectYn=String \
							;nonPaymentYn=String;fcpid=String;customerGuid=String} \
		; OrderAB = map:{customerId=Nullables.NullableDecimal;orderId=Nullables.NullableDecimal;fromDate=Nullables.NullableDateTime \
						; toDate=Nullables.NullableDateTime;fromTotalPrice=Nullables.NullableDecimal;toTotalPrice=Nullables.NullableDecimal \
						; settletypeId=Nullables.NullableDecimal;orderstatusId=Nullables.NullableDecimal \
						; nonPaymentYn=String-MspadminBiz.Common.Config.MspadminConfig.GetOrderNonPaymentYnDefaultValue() \
						; customerGuid=String;orderGuid=String \
						; customerAccount=String ; customerSei=String ; customerMei=String} \
		; SalesAB = map:{orderId=Nullables.NullableDecimal;mpfuid=String;titleName=String;trackName=String;artistName=String \
						; contractorCode=String;fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime \
						; settletypeId=Nullables.NullableDecimal;orderstatusId=Nullables.NullableDecimal;fcpid=String;wmCardCode=String \
						; nonPaymentYn=String;IsTargetOrderStautsCancel=bool} \
		; SupportAB = map:{supportId=Nullables.NullableDecimal;customerId=Nullables.NullableDecimal;customerName=String;customerMail=String;fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime;questionkindId=Nullables.NullableDecimal;supportStatusCode=String;sendmailYn=String} \
		; EnquateAB = map:{enquateId=Nullables.NullableDecimal;customerId=Nullables.NullableDecimal;sei=String;mei=String;mail=String;fromDate=Nullables.NullableDateTime;toDate=Nullables.NullableDateTime} \
		; MailTemplateAB = map:{mailTemplateId=Nullables.NullableDecimal;mailTemplateCode=String} \
		; StaffAB = map:{staffId=Nullables.NullableDecimal;staffName=String;company=String;isTargetActionDelete=bool-true} \
		; AlbumRankingAB = map:{rankingId=Nullables.NullableDecimal ; name=String ; genreCode=String \
							   ; fromDate=Nullables.NullableDateTime ; toDate=Nullables.NullableDateTime \
							   ; isTargetActionDelete=bool-true ; countUnitCode=String} \
		; RightsParamsAB = map:{wmrmId=Nullables.NullableDecimal ; makerCode=String ; isTargetActionDelete=bool-true} \
		; HelpAB = map:{isTargetActionDelete=bool-true} \
		; AgreementAB = map:{isTargetActionDelete=bool-true} \
		; FaqAB = map:{isTargetActionDelete=bool-true} \
    }
torque.argumentBeanRelatedSqlParameterMap = map:{ \
		ContentsSearchAB = list:{TitleContentsPmb;TrackContentsPmb} \
		; ProductAB = list:{TitleContentsPmb;TrackContentsPmb} \
		; PackageInfoAB = list:{TitleContentsPmb} \
		; NewReleaseAB = list:{NewReleaseInfoPmb} \
		; CustomerAB = list:{CustomerCardPmb} \
		; SalesAB = list:{OrderDetailInfoPmb} \
		; ArtistInfoAB = list:{ArtistInfoPmb} \
		; ArtistSearchAB = list:{ArtistInfoPmb} \
		; MailTemplateAB = list:{MailTemplateSimplePmb} \
	}

# /---------------------------------------------------------------------------
# [Additional ForeignKey]
# 	map: { \
#		regStaffId = map:{ \
#			localTableName=* ; foreignTableName=staff ; localColumnName=reg_staff_id ; foreignColumnName=staff_id \
#		} \
#		; freeSpacePosition = map:{ \
#			localTableName=mng_FreeSpace ; foreignTableName=mst_FreeSpacePosition ; localColumnName=position ; foreignColumnName=position_code \
#		} \
#	}
# 
torque.additionalForeignKeyMap = map:{ \
		regStaffId = map:{ \
			localTableName=* ; foreignTableName=staff ; localColumnName=reg_staff_id ; foreignColumnName=staff_id \
		} \
		; updStaffId = map:{ \
			localTableName=* ; foreignTableName=staff ; localColumnName=upd_staff_id ; foreignColumnName=staff_id \
		} \
		; authFuncAuthFunc = map:{ \
			localTableName=auth_func ; foreignTableName=auth_func ; localColumnName=parent_id ; foreignColumnName=func_id \
		} \
		; authGroupFuncAssAuthGroup = map:{ \
			localTableName=auth_GroupFuncAss ; foreignTableName=auth_Group ; localColumnName=group_id ; foreignColumnName=group_id \
		} \
		; authGroupFuncAssAuthFunc = map:{ \
			localTableName=auth_GroupFuncAss ; foreignTableName=auth_func ; localColumnName=func_id ; foreignColumnName=func_id \
		} \
		; authStaffFuncAssAuthFunc = map:{ \
			localTableName=auth_StaffFuncAss ; foreignTableName=auth_func ; localColumnName=func_id ; foreignColumnName=func_id \
		} \
		; authStaffFuncAssStaff = map:{ \
			localTableName=auth_StaffFuncAss ; foreignTableName=staff ; localColumnName=staff_id ; foreignColumnName=staff_id \
		} \
		; authStaffGruopAssAuthGroup = map:{ \
			localTableName=auth_StaffGroupAss ; foreignTableName=auth_Group ; localColumnName=group_id ; foreignColumnName=group_id \
		} \
		; authStaffGruopAssStaff = map:{ \
			localTableName=auth_StaffGroupAss ; foreignTableName=staff ; localColumnName=staff_id ; foreignColumnName=staff_id \
		} \
		; freeSpacePosition = map:{ \
			localTableName=mng_FreeSpace ; foreignTableName=mst_FreeSpacePosition ; localColumnName=position ; foreignColumnName=position_code \
		} \
		; shopOrderStatus = map:{ \
			localTableName=shop_Order ; foreignTableName=shop_OrderStatus ; localColumnName=orderstatus_id ; foreignColumnName=orderstatus_id \
		} \
		; shopOrderPrefectures = map:{ \
			localTableName=shop_Order ; foreignTableName=shop_Prefectures ; localColumnName=prefectures_id ; foreignColumnName=prefectures_id \
		} \
		; shopOrderDetailOrder = map:{ \
			localTableName=shop_OrderDetail ; foreignTableName=shop_Order ; localColumnName=order_id ; foreignColumnName=order_id \
		} \
		; orderDetailStatus = map:{ \
			localTableName=shop_OrderDetail ; foreignTableName=shop_OrderStatus ; localColumnName=orderstatus_id ; foreignColumnName=orderstatus_id \
		} \
		; orderDetailDigiconType = map:{ \
			localTableName=shop_OrderDetail ; foreignTableName=shop_DigiconType ; localColumnName=digicon_type_code ; foreignColumnName=digicon_type_code \
		} \
		; shopLicenseOrderDetail = map:{ \
			localTableName=shop_License ; foreignTableName=shop_OrderDetail ; localColumnName=order_detail_id ; foreignColumnName=order_detail_id \
		} \
		; shopChildTrackOrderDetail = map:{ \
			localTableName=shop_ChildTrack ; foreignTableName=shop_OrderDetail ; localColumnName=order_detail_id ; foreignColumnName=order_detail_id \
		} \
		; shopChildTrackLicense = map:{ \
			localTableName=shop_ChildTrackLicense ; foreignTableName=shop_ChildTrack ; localColumnName=child_track_id ; foreignColumnName=child_track_id \
		} \
		; csEnquateCustomer = map:{ \
			localTableName=cs_Enquate ; foreignTableName=shop_Customer ; localColumnName=customer_id ; foreignColumnName=customer_id \
		} \
		; albumRankingGenre = map:{ \
			localTableName=mng_AlbumRanking ; foreignTableName=mng_Genre ; localColumnName=genre_code ; foreignColumnName=genre_code \
		} \
		; artistRankingGenre = map:{ \
			localTableName=mng_ArtistRanking ; foreignTableName=mng_Genre ; localColumnName=genre_code ; foreignColumnName=genre_code \
		} \
		; musicRankingGenre = map:{ \
			localTableName=mng_MusicRanking ; foreignTableName=mng_Genre ; localColumnName=genre_code ; foreignColumnName=genre_code \
		} \
		; pickupGenre = map:{ \
			localTableName=mng_Pickup ; foreignTableName=mng_Genre ; localColumnName=genre_code ; foreignColumnName=genre_code \
		} \
		; pickupArtistGenre = map:{ \
			localTableName=mng_PickupArtist ; foreignTableName=mng_Genre ; localColumnName=genre_code ; foreignColumnName=genre_code \
		} \
		; specialIssueGenre = map:{ \
			localTableName=mng_SpecialIssue ; foreignTableName=mng_Genre ; localColumnName=genre_code ; foreignColumnName=genre_code \
		} \
		; csSupportStatus = map:{ \
			localTableName=cs_Support ; foreignTableName=cs_SupportStatus ; localColumnName=support_status_code ; foreignColumnName=support_status_code \
		} \
		; csSupportQuestionKind = map:{ \
			localTableName=cs_Support ; foreignTableName=cs_QuestionKind ; localColumnName=questionkind_id ; foreignColumnName=questionkind_id \
		} \
		; csSupportOs = map:{ \
			localTableName=cs_Support ; foreignTableName=cs_Os ; localColumnName=os_id ; foreignColumnName=os_id \
		} \
		; csSupportMediaPlayer = map:{ \
			localTableName=cs_Support ; foreignTableName=cs_MediaPlayer ; localColumnName=mediaplayer_id ; foreignColumnName=mediaplayer_id \
		} \
		; csSupportDevice = map:{ \
			localTableName=cs_Support ; foreignTableName=cs_Device ; localColumnName=device_id ; foreignColumnName=device_id \
		} \
		; csSupportBrowser = map:{ \
			localTableName=cs_Support ; foreignTableName=cs_Browser ; localColumnName=browser_id ; foreignColumnName=browser_id \
		} \
		; trackDisc = map:{ \
			localTableName=Track ; foreignTableName=Disc ; localColumnName=disc_id ; foreignColumnName=disc_id \
		} \
		; discTitle = map:{ \
			localTableName=Disc ; foreignTableName=Title ; localColumnName=title_id ; foreignColumnName=title_id \
		} \
		; trackTrialTrial = map:{ \
			localTableName=TrackTrial ; foreignTableName=Trial ; localColumnName=trial_id ; foreignColumnName=trial_id \
		} \
		; discImageDisc = map:{ \
			localTableName=DiscImage ; foreignTableName=Disc ; localColumnName=disc_id ; foreignColumnName=disc_id \
		} \
		; discImageImage = map:{ \
			localTableName=DiscImage ; foreignTableName=Image ; localColumnName=image_id ; foreignColumnName=image_id \
		} \
		; artistInfoArtist = map:{ \
			localTableName=mng_ArtistInfo ; foreignTableName=Artist ; localColumnName=artist_id ; foreignColumnName=artist_id \
		} \
		; musicRankingListTrack = map:{ \
			localTableName=mng_MusicRankingList ; foreignTableName=Track ; localColumnName=track_id ; foreignColumnName=track_id \
		} \
		; albumRankingListTitle = map:{ \
			localTableName=mng_AlbumRankingList ; foreignTableName=Title ; localColumnName=title_id ; foreignColumnName=title_id \
		} \
		; artistRankingListArtist = map:{ \
			localTableName=mng_ArtistRankingList ; foreignTableName=Artist ; localColumnName=artist_id ; foreignColumnName=artist_id \
		} \
		; titleTitleTopArtist = map:{ \
			localTableName=Title ; foreignTableName=view_TitleTopArtist ; localColumnName=title_id ; foreignColumnName=title_id \
		} \
		; titleTopArtistArtist = map:{ \
			localTableName=view_TitleTopArtist ; foreignTableName=Artist ; localColumnName=artist_id ; foreignColumnName=artist_id \
		} \
		; trackTrackTopArtist = map:{ \
			localTableName=Track ; foreignTableName=view_TrackTopArtist ; localColumnName=track_id ; foreignColumnName=track_id \
		} \
		; trackTopArtistArtist = map:{ \
			localTableName=view_TrackTopArtist ; foreignTableName=Artist ; localColumnName=artist_id ; foreignColumnName=artist_id \
		} \
		; shopRightsParamsWMT9Maker = map:{ \
			localTableName=shop_RightsParams_WMT9 ; foreignTableName=Label ; localColumnName=maker_code ; foreignColumnName=label_code \
		} \
		; agreementAgreementCode = map:{ \
			localTableName=mng_Agreement ; foreignTableName=mng_AgreementCode ; localColumnName=agreement_code ; foreignColumnName=agreement_code \
		} \
	}

# ----------------/

# /---------------------------------------------------------------------------
# [Original Dao Component]
#
torque.originalDaoComponentMap = map:{ \
		authInfosCreater = map:{ className=MspadminBiz.Dao.Original.AuthInfosCreaterImpl } \
	}
# ----------------/

# /---------------------------------------------------------------------------
# [Original Behavior Aspect]
#
torque.originalBehaviorAspectMap = map:{ \
		shopIdConditionAppendInterceptor = map:{ className=MspadminBiz.Dao.Original.ShopIdConditionAppendInterceptor ; pointcut=DelegateRead.*, DelegateSelect.* } \
		shopIdEntitySetupInterceptor = map:{ className=MspadminBiz.Dao.Original.ShopIdEntitySetupInterceptor ; pointcut=DelegateCreate.*, DelegateInsert.* } \
	}
# ----------------/

# =======================================================================================
#                                                                           for JDBC task
#                                                                           =============
#
#   *Attension: If you use oracle and db2, schema must be UpperCase.
#
torque.database.driver		= com.microsoft.jdbc.sqlserver.SQLServerDriver
torque.database.url			= jdbc:microsoft:sqlserver://ci06110:1433
torque.database.host		= localhost
torque.database.schema		= dbo
torque.database.user		= msp
torque.database.password	= msp

# Unnecessary tables: (NotNull - list:{TABLE_HINT;TABLE_HINT})
#   Default value is empty-list.
#
#   For example, if you want to except the table that the name starts with 'D_',
#   you should set this property as follows:
#     ex) list:{prefix:D_}
#
#   And other example:
#     ex) list:{prefix:D_; suffix:_Test; sysobjects; dtproperties}
#
torque.table.except.list = list:{ sysconstraints ; syssegments ; dtproperties ; prefix:dp_ ; prefix:diff_ ; prefix:calc ; prefix:keyword_ ; prefix:batch_ ; prefix:___ }


# =======================================================================================
#                                                                            for Internal
#                                                                            ============
# Normally you don't need to change these properties.

#
# [JDBC to java-native mapping] (NotRequired - Default 'map:{}')
#
# ex) map:{INTEGER=java.lang.Integer;TIMESTAMP=java.util.Date}
# ex) map:{} // If you don't want to change...
#
# Default mapping as follows:
# * --------------------------------------
# * Torque Type   | Java Type            |
# * --------------------------------------
# * CHAR          | java.lang.String     |
# * VARCHAR       | java.lang.String     |
# * LONGVARCHAR   | java.lang.String     |
# * NUMERIC       | java.math.BigDecimal |
# * DECIMAL       | java.math.BigDecimal |
# * BIT           | java.lang.Boolean    |
# * TINYINT       | java.math.BigDecimal |
# * SMALLINT      | java.math.BigDecimal |
# * INTEGER       | java.math.BigDecimal |
# * BIGINT        | java.math.BigDecimal |
# * REAL          | java.math.BigDecimal |
# * FLOAT         | java.math.BigDecimal |
# * DOUBLE        | java.math.BigDecimal |
# * BINARY        | byte[]               |
# * VARBINARY     | byte[]               |
# * LONGVARBINARY | byte[]               |
# * DATE          | java.util.Date       |
# * TIME          | java.sql.Time        |
# * TIMESTAMP     | java.sql.Timestamp   |
# *
# * -------------------------------------------------------
# * A couple variations have been introduced to cover cases
# * that may arise, but are not covered above.
# * BOOLEANCHAR   | java.lang.Boolean    |
# * BOOLEANINT    | OR java.lang.Boolean |
# *
torque.jdbcToJavaNativeMap = map:{ \
	CHAR=String \
	; VARCHAR=String \
	; LONGVARCHAR=String \
	; NUMERIC=Nullables.NullableDecimal \
	; DECIMAL=Nullables.NullableDecimal \
	; BIT=Nullables.NullableBoolean \
	; TINYINT=Nullables.NullableDecimal \
	; SMALLINT=Nullables.NullableDecimal \
	; INTEGER=Nullables.NullableDecimal \
	; BIGINT=Nullables.NullableDecimal \
	; REAL=Nullables.NullableDecimal \
	; FLOAT=Nullables.NullableDecimal \
	; DOUBLE=Nullables.NullableDecimal \
	; DATE=Nullables.NullableDateTime \
	; TIME=Nullables.NullableDateTime \
	; TIMESTAMP=Nullables.NullableDateTime \
}

# [The list of java-native that treated as String] (NotRequired - Default 'list:{}')
#   *This property overrides all-default-value.
#
#   Default list as follows: (When you set this empty)
#     String
#
torque.javaNativeStringList = list:{String;string}

# [The list of java-native that treated as Boolean] (NotRequired - Default 'list:{}')
#   *This property overrides all-default-value.
#
#   Default list as follows: (When you set this empty)
#     Boolean
#
torque.javaNativeBooleanList = list:{Nullables.NullableBoolean}

# [The list of java-native that treated as Number] (NotRequired - Default 'list:{}')
#   *This property overrides all-default-value.
#
#   Default list as follows: (When you set this empty)
#     Byte, Short, Integer, Long, Float, Double, BigDecimal, BigInteger
#
torque.javaNativeNumberList = list:{Nullables.NullableDecimal}

# [The list of java-native that treated as Date] (NotRequired - Default 'list:{}')
#   *This property overrides all-default-value.
#
#   Default list as follows: (When you set this empty)
#     Date, Time, Timestamp
#
torque.javaNativeDateList = list:{Nullables.NullableDateTime}

# [The list of java-native that treated as Binary] (NotRequired - Default 'list:{}')
#   *This property overrides all-default-value.
#
#   Default list as follows: (When you set this empty)
#     byte[]
#
torque.javaNativeBinaryList = list:{}


# /---------------------------------------------------------------------------
# [ToLowerInGeneratorUnderscoreMethod] (NotRequired - Default 'true')
#   [true]
#
#   [false]
#
torque.isAvailableToLowerInGeneratorUnderscoreMethod = false
# ----------------/


# =======================================================================================
#                                                                             for PlaySql
#                                                                             ===========
torque.invokeSqlDirectoryDefinitionMap = map:{ \
	isAutoCommit = false \
	; isRollbackOnly = true \
	; isErrorContinue = false \
	; sqlDirectory = ../MspadminTrial/MspadminBiz/Dao/Exdao \
}

